{"version":3,"sources":["secrets.js","components/SingleMovie.js","components/Main.js","components/SearchBar.js","components/AllMovies.js","components/Movie.js","components/NavBar.js","index.js"],"names":["apiKey","SingleMovie","props","movieId","useParams","useState","singleMovie","setSingleMovie","fetchData","useCallback","a","options","method","url","params","imdb","type","headers","axios","request","result","resultsData","data","console","log","useEffect","className","title","directors","description","year","genres","map","element","idx","key","Main","path","render","to","SearchBar","searchResults","setSearchResults","searchTitleText","setSearchTitleText","fetchMovie","event","preventDefault","searchTitleOptions","results","movie_results","onSubmit","value","required","onChange","target","AllMovies","movie","imdb_id","Movie","NavBar","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1c9e2854.chunk.js","sourcesContent":["const apiKey = \"8c44cf684fmshd85451a0f98b026p1d6e6cjsnc3e820720213\"\n\nexport default apiKey\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport apiKey from '../secrets'\n\n/**\n * fetch('/api/endpoint/') to access my backend\n */\n\nconst SingleMovie = (props) => {\n  const { movieId } = useParams();\n\n  const [singleMovie, setSingleMovie] = useState(null);\n\n  const fetchData = useCallback(async () => {\n    try {\n      const options = {\n        method: \"GET\",\n        url: \"https://movies-tvshows-data-imdb.p.rapidapi.com/\",\n        params: { imdb: movieId, type: \"get-movie-details\" },\n        headers: {\n          \"x-rapidapi-key\":\n          apiKey,\n          \"x-rapidapi-host\": \"movies-tvshows-data-imdb.p.rapidapi.com\",\n        },\n      };\n\n      const result = await axios.request(options);\n      const resultsData = result.data;\n\n      setSingleMovie(resultsData);\n    } catch (err) {\n      console.log(\"O no, you have an error\", err);\n    }\n  }, [movieId]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  if (!singleMovie) {\n    return <h1>Loading</h1>;\n  }\n\n  return (\n    <div className=\"single_movie_container\">\n      <h2>Title: {singleMovie.title}</h2>\n      {singleMovie.directors ? (\n        <p>Director: {singleMovie.directors}</p>\n      ) : (\n        <p>Director: No directors are listed</p>\n      )}\n      <p>Description: {singleMovie.description}</p>\n\n      {singleMovie.year > 0 && <h6>Release Year: {singleMovie.year}</h6>}\n\n      {singleMovie.genres ? (\n        <div className=\"single_movie_item_container\">\n          <div>Genre:</div>\n          {singleMovie.genres.map((element, idx) => {\n            return <ul key={`${element} with the Id of: ${idx}`}>{element}</ul>;\n          })}\n        </div>\n      ) : (\n        <p>Genre: No data listed </p>\n      )}\n    </div>\n  );\n};\n\nexport default SingleMovie;\n","import React from \"react\";\nimport { AllMovies, SingleMovie, NavBar } from \"./index\";\nimport {\n  Switch,\n  Route,\n  BrowserRouter as Router,\n  Redirect,\n} from \"react-router-dom\";\n\nconst Main = () => {\n  return (\n    <div>\n      <h1>Welcome to my App</h1>\n      <NavBar />\n      <Switch>\n        <Route\n          path=\"/movies/:movieId\"\n          render={() => {\n            return <SingleMovie />;\n          }}\n        />\n        <Route\n          path=\"/movies\"\n          render={() => {\n            return <AllMovies />;\n          }}\n        />\n        <Redirect to=\"/movies\" />\n      </Switch>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport axios from \"axios\";\nimport apiKey from '../secrets'\n\nconst SearchBar = (props) => {\n  const {\n    searchResults,\n    setSearchResults,\n    searchTitleText,\n    setSearchTitleText,\n  } = props;\n\n const fetchMovie = async (event) => {\n   event.preventDefault();\n\n   try{\n    const searchTitleOptions = {\n      method: 'GET',\n      url: 'https://movies-tvshows-data-imdb.p.rapidapi.com/',\n      params: {title: searchTitleText, type: 'get-movies-by-title'},\n      headers: {\n        'x-rapidapi-key': apiKey,\n        'x-rapidapi-host': 'movies-tvshows-data-imdb.p.rapidapi.com'\n      }\n    };\n\n    const results = await axios.request(searchTitleOptions)\n    const resultsData = results.data.movie_results\n\n    setSearchResults(resultsData)\n\n\n   }catch (err){\n     console.log(err)\n   }\n }\n\n  return (\n    <div className=\"searchbar_container\">\n      <div className=\"header\">\n        <h2 >Movie Title</h2>\n      </div>\n\n      <div className=\"searchbar_inner_container\">\n        <form onSubmit={fetchMovie} className=\"searchbar_inner_container\">\n          <div>\n            <label className=\"title_label\">Title:</label>\n            <input\n              value={searchTitleText}\n              required\n              onChange={(event) => {\n                setSearchTitleText(event.target.value);\n              }}\n            />\n          </div>\n          <button type=\"submit\" className=\"search-button\">\n            Search\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport { Movie, SearchBar } from \"./index\";\n\nconst AllMovies = (props) => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchTitleText, setSearchTitleText] = useState(\"\");\n\n  return (\n    <div className=\"allMovies_Main_Container\">\n      <SearchBar\n        searchResults={searchResults}\n        setSearchResults={setSearchResults}\n        searchTitleText={searchTitleText}\n        setSearchTitleText={setSearchTitleText}\n      />\n\n      <h2>Movie Search Results:</h2>\n      <div className=\"allMovies_Container\">\n        {searchResults.map((movie, idx) => {\n          return (\n            <div key={movie.imdb_id} >\n              <Movie movie={movie} />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default AllMovies;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Movie = (props) => {\n  const { movie } = props;\n\n  return (\n    <Link to={`/movies/${movie.imdb_id}`}>\n      <div className=\"movie_container\">\n        <h5>Title: {movie.title}</h5>\n        {movie.year > 0 && <h6>Year: {movie.year}</h6>}\n      </div>\n    </Link>\n  );\n};\n\nexport default Movie;\n","import React from 'react'\nimport {Link} from \"react-router-dom\"\n\nconst NavBar = (props) => {\n\n\n  return(\n    <div className=\"nav_bar_container\">\n      <div className=\"link_container\">\n        <div>\n          <Link to={\"/movies\" }className=\"nav_item\">\n            All Movies\n          </Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default NavBar\n","import React, { useState, useEffect }  from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport {Main} from './components'\nimport './styles/main.css'\n\nReactDOM.render(\n  <Router>\n    <Main/>\n  </Router>,\n  document.getElementById('app')\n);\n"],"sourceRoot":""}